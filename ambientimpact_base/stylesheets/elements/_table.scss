// -----------------------------------------------------------------------------
//   Base table partial
// -----------------------------------------------------------------------------

///
/// <table> element background colour on light backgrounds.
///
$table-background-colour-on-light:
  mix($foreground-colour-on-light, $background-colour-light, 10%) !default;

///
/// <thead> element background colour on light backgrounds.
///
$table-header-background-colour-on-light: hsla(0, 0, 0, 0.05) !default;

///
/// <thead> element background colour on dark backgrounds.
///
$table-header-background-colour-on-dark: hsla(0, 0, 100%, 0.05) !default;

///
/// <table> element background colour on dark backgrounds.
///
$table-background-colour-on-dark:
  mix($foreground-colour-on-dark, $background-colour-dark, 10%) !default;

///
/// <table> element border radius.
///
$table-border-radius: $material-border-radius !default;

:root {
  --table-border-radius: #{$table-border-radius};

  --table-cell-padding-vertical:        0.3em;
  --table-cell-padding-horizontal:      0.4em;
  --table-cell-padding-horizontal-edge: 0.7em;
}

table {

  // CSS-only responsive tables loosely based on this CodePen by David Bushell.
  //
  // @link https://codepen.io/dbushell/pen/wGaamR

  // If max-content is not supported as a max-width value, display as
  // inline-block as displaying as a table does not allow overflow scrolling.
  // Using inline-block allows the table to mimic max-content and not be wider
  // than it needs to be.
  display: inline-block;

  // If the browser supports using max-content as a max-width value, display
  // as block to avoid using the inline box model.
  @supports (max-width: max-content) {
    display: block;
  }

  // Scroll horizontally rather than overflowing the container.
  overflow-x: auto;

  // If the browser supports max-content as a value, set the max-width so that
  // the table may be centred horizontally if needed.
  max-width: max-content;

  @include set-colours(
    $background: $table-background-colour-on-light
  );

  @include on-dark-colour-scheme {
    @include set-colours(
      $background: $table-background-colour-on-dark
    );
  }

  border-radius: var(--table-border-radius);
}

thead {
  @include set-colours(
    $background:            $table-header-background-colour-on-light,
    $background-reference:  $table-background-colour-on-light
  );

  @include on-dark-colour-scheme {
    @include set-colours(
      $background:            $table-header-background-colour-on-dark,
      $background-reference:  $table-background-colour-on-dark
    );
  }
}

td, th {
  padding:
    var(--table-cell-padding-vertical) var(--table-cell-padding-horizontal);

  @include root-conditions(('[dir=ltr]'), 'html') {
    &:first-child {
      padding-left: var(--table-cell-padding-horizontal-edge);
    }
    &:last-child {
      padding-right: var(--table-cell-padding-horizontal-edge);
    }
  }
  @include root-conditions(('[dir=rtl]'), 'html') {
    &:first-child {
      padding-right: var(--table-cell-padding-horizontal-edge);
    }
    &:last-child {
      padding-left: var(--table-cell-padding-horizontal-edge);
    }
  }
}
