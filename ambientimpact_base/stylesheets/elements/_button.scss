// -----------------------------------------------------------------------------
//   Base button partial
// -----------------------------------------------------------------------------

@use '../global/typography';
@use 'material.button' as material-button;
@use 'material.common/material.colour' as material-colour;
@use 'material.ripple' as material-ripple;
@use 'sass:color';
@use 'sass/helpers/transition';

///
/// Whether to use Material Design-style buttons.
///
$material-buttons: true !default;

///
/// The background colour for primary Material buttons in a form.
///
$material-button-background-colour-primary:
  material-colour.$material-primary-colour !default;

///
/// The background colour for primary Material buttons when hovered/focused.
///
$material-button-background-colour-primary-interact: color.adjust(
  material-colour.$material-primary-colour, $lightness: 8%
) !default;

///
/// Material button font weight.
///
$material-button-font-weight: typography.$font-weight-strong !default;

///
/// Material button font family.
///
$material-button-font-family: typography.$font-stack !default;

// All buttons.
.button, .material-button, .form-submit {
  @if $material-buttons {
    // Ripples are applied to both buttons that have the button styling and
    // plain buttons.
    @include material-ripple.material-ripple;
  }

  &:not(.plain-button) {
    @if $material-buttons {
      @include material-button.material-button;

      font-family:  $material-button-font-family;
      font-weight:  $material-button-font-weight;
    } @else {
      padding: 0.3em 0.6em;
    }
  }

  // Override normalize.css from Drupal core.
  // @todo Is cursor: pointer in normalize.css more intuitive for people, or
  // does it just blur the lines between buttons and links?
  cursor: default !important;
}

// Primary buttons. There may be multiple submit buttons on a page, either as
// #edit-submit or with a number appended in the form of #edit-submit--*, so we
// use an attribute selector to catch those.
.button--primary,
[id^='edit-submit'] {
  &:not(.plain-button) {
    @if $material-buttons {
      @include material-button.material-button(
        $background-colour:
          $material-button-background-colour-primary,
        $background-colour-interact:
          $material-button-background-colour-primary-interact
      );

      font-weight: $material-button-font-weight;

      // This button has a light current colour, which means the focus
      // outline will be almost or totally invisible against the
      // background, which we currently assume to be light.
      &:focus {
        outline-color: $material-button-background-colour-primary;
      }
    }
  }
}

// Plain buttons have no background, shadows, or increased padding, but still
// use the Material button typography. These are intended for places where space
// is at a premium and minimalism is preferred, e.g. on toasts or other
// components.
.plain-button {
  padding:          0;
  border-width:     0;
  background-color: transparent;

  @if $material-buttons {
    color:      $material-button-background-colour-primary;

    @include    transition.transition-fade-normal();

    &:hover,
    &:focus {
      color:    $material-button-background-colour-primary-interact;

      @include  transition.transition-fade-hover();
    }
  }
}

// Class for elements used as a placeholder for buttons, usually a link that
// gets swapped out by JavaScript as progressive enhancement. This only applies
// the layout and typography of buttons to avoid layout shifting when the swap
// occurs, but no other styling that would cause a user to mistake it for a
// button. This is so as not to contribute to the anti-pattern of links that
// look like buttons and vice versa:
//
// @see https://ambientimpact.com/web/snippets/but-sometimes-links-look-like-buttons-and-buttons-look-like-links
.button-placeholder {
  @if $material-buttons {
    @include material-button.material-button-base;

    // Chromium and Firefox default to inline-block for buttons, so apply that
    // to placeholders. Note that we have to exclude hidden elements as this
    // could override that and cause unexpected results.
    &:not([hidden]) {
      display: inline-block;
    }

    font-family:  $material-button-font-family;
    font-weight:  $material-button-font-weight;
  }
}
