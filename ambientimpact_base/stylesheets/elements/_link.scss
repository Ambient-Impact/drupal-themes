// -----------------------------------------------------------------------------
//   Base link partial
// -----------------------------------------------------------------------------

@use 'sass/helpers/colour';
@use 'link/link';
@use 'link/link.colour' as link-colour;
@use 'link/link.state' as link-state;
@use 'photoswipe';
@use 'sass/helpers/transition';

///
/// Whether to include the basic link styles.
///
$use-link-styles: true !default;

///
/// Whether to include the image links styles.
///
$use-image-link-styles: true !default;

///
/// Elements that are considered "image" elements, inside of a link.
///
/// Note that this excludes <svg> and <canvas> elements by default those often
/// have their own specific styles.
///
$image-elements: img !default;

///
/// Image element filters in a link when link is not highlighted/actived.
///
$image-normal-filters: contrast(100%) brightness(100%) !default;

///
/// Image element filters in a link when link is highlighted.
///
$image-highlight-filters: contrast(75%) brightness(150%) !default;

///
/// Image element filters in a link when link is activated.
///
$image-active-filters: contrast(100%) brightness(100%) !default;

///
/// Links containing images.
///
/// This applies image link filters to images based on link states.
///
/// @param {List} $image-elements [$image-elements]
///   Selectors of elements that are considered to be image elements to apply
///   styles to.
///
/// @require {mixin} transition.fade-base
/// @require {mixin} transition.fade-highlight
/// @require {mixin} link-state.highlight
/// @require {mixin} link-state.active
/// @require {variable} $image-elements
/// @require {variable} $image-normal-filters
/// @require {variable} $image-highlight-filters
/// @require {variable} $image-active-filters
///
@mixin image($image-elements: $image-elements) {
  #{$image-elements} {
    filter: $image-normal-filters;

    @include transition.fade-base(
      $props: filter
    );
  }

  @include link-state.highlight {
    #{$image-elements} {
      filter: $image-highlight-filters;

      @include transition.fade-highlight();
    }
  }

  @include link-state.active {
    #{$image-elements} {
      filter: $image-active-filters;
    }
  }
}

///
/// Output base link styles.
///
/// @require {mixin} colour.on-dark-scheme
/// @require {mixin} image
/// @require {mixin} link.link
/// @require {mixin} link-colour.custom-properties
/// @require {mixin} link-colour.set
/// @require {variable} colour.$background-dark
/// @require {variable} photoswipe.$photoswipe-background-colour-theme-dark
/// @require {variable} photoswipe.$photoswipe-root-class
/// @require {variable} $use-image-link-styles
/// @require {variable} $use-link-styles
///
@mixin output {

  // These are limited to layout containers and other content containers so that
  // we don't affect the administrative toolbar and other elements outside of
  // what would be considered the site content itself. By using :any-link we can
  // target only valid links, i.e. those that have a valid href.
  //
  // @see https://css-tricks.com/how-to-disable-links/
  .layout-container,
  .node-preview-container,
  .offcanvas-panel {
    // Include link colours as custom properties in case they're useful for
    // JavaScript, etc.
    @include link-colour.custom-properties;

    :any-link {
      // Any links.
      &,
      // Currently active menu item links.
      &.is-active,
      // jQuery UI widget content.
      .ui-widget-content & {
        // Basic link styles.
        @if $use-link-styles == true {
          @include link.link;

          @include colour.on-dark-scheme {
            @include link-colour.set(colour.$background-dark);
          }
        }

        // Apply the image link mixin to all links.
        @if $use-image-link-styles == true {
          @include image;
        }
      }
    }

  }

  // PhotoSwipe has a dark background by default, so set link colours for that
  // type of background.
  .#{photoswipe.$photoswipe-root-class} :any-link {
    @if $use-link-styles == true {
      @include link.link(photoswipe.$photoswipe-background-colour-theme-dark);
    }
  }

}
