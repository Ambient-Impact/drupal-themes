// -----------------------------------------------------------------------------
//   Base focused element partial
// -----------------------------------------------------------------------------

@use 'sass/helpers/outline';
@use 'sass/helpers/transition';

a {
  @include outline.focus-outline($is-link: true);
}

button,
// This catches things like the <summary> element in a <details>.
[role="button"],
input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="radio"],
input[type="checkbox"],
[tabindex]:not([tabindex="-1"]) {
  @include outline.focus-outline;
}

// This allows invisible elements that can receive focus (e.g. from keyboard,
// etc.) to transition, as opposed to the default behaviour that instantly pops
// them in and out of view.
.visually-hidden.focusable {
  @supports (pointer-events: none) {
    position:   static;
    clip:     auto;
    width:      auto;
    height:     auto;
    overflow:   visible;

    pointer-events: none;
    opacity:    0;

    &:focus {
      pointer-events: auto;
      opacity:    1;
    }
  }
}

// This ensures that focusables that have had their .visually-hidden class
// removed correctly use the active transition rather than a slow fade in. An
// example of this are contextual triggers. Note that this could potentially
// have issues with focusables that don't use .visually-hidden.
.focusable:not(.visually-hidden) {
  @include transition.transition-fade-active;
}
