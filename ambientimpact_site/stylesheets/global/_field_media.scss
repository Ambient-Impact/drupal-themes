// -----------------------------------------------------------------------------
//   Media field partial
// -----------------------------------------------------------------------------

///
/// Media field background colour.
///
$media-field-background-colour: black !default;

///
/// Media field spacing.
///
/// This is used as the overall field padding and spacing between field items.
/// Defaults to $layout-gutter to look consistent with the page layout spacing.
///
$media-field-spacing: $layout-gutter !default;

///
/// Common style for media fields.
///
/// @param {Bool} $use-top-shadow
///   Whether to include the top shadow when using mixin
///   horizontal-bleed-background.
///
@mixin media-field($use-top-shadow: true) {
  $local-stacking-order:  background, content;
  $shadow-settings:       true;

  @if $use-top-shadow == false {
    $shadow-settings: (false, true, true);
  }

  margin:   $general-spacing      0;
  padding:  $media-field-spacing  0;

  @include set-colours(
    $background:  $media-field-background-colour
  );

  @include horizontal-bleed-background(
    $colour:  $media-field-background-colour,
    $z-index: index($local-stacking-order, background),
    $shadow:  $shadow-settings
  );

  :link, :visited {
    @include link-colours($media-field-background-colour);

    // Remove fancy link underlines.
    @if $use-fancy-link-underlines == true {
      @include remove-fancy-link-underlines;
    }
  }

  img {
    // Ensure images are always the full width of the field item.
    width:  100%;
  }

  .field__item {
    position: relative;

    z-index: index($local-stacking-order, content);
  }

  // Spacing between field items and any preceding element (usually another
  // field item).
  *:not(.visually-hidden):not(.hidden) + .field__item {
    @include vertical-spacing(
      $spacing-small: $media-field-spacing,
      $spacing-large: $media-field-spacing,
    );
  }

  // These are centred using horizontal margins.
  .field__item, .intrinsic-ratio, :link {
    margin-left:  auto;
    margin-right: auto;
  }

  // Links and images need to be displayed as block to avoid weird inline space
  // appearing.
  :link, img {
    display: block;
  }
}

///
/// Common style for media field captions.
///
@mixin media-field-caption {
  figcaption {
    text-align: center;

    // Set a bottom margin in case this is a multi-item field, to make it
    // easier to tell which item this caption applies to.
    margin-bottom: $general-spacing * 2;

    // AdaptiveTheme captions. Set caption links back to inline. The class
    // is for specificity.
    // &.caption a {
    //   display: inline;
    // }
  }

  .field__item:last-child {
    figcaption {
      // Remove the bottom margin on the last item's caption.
      margin-bottom: 0;
    }
  }

  * + figcaption {
    margin-top: $media-field-spacing;
  }

  // Remove fancy link underlines.
  @if $use-fancy-link-underlines == true {
    figure > :not(figcaption) a,
    figure > a {
      @include remove-fancy-link-underlines;
    }
  }
}

// Image fields.
.field--type-image:not(.form-wrapper) {
  // Anything that isn't the project images field.
  &:not(.field--name-field-project-images) {
    @include media-field;
  }
  // Project images field.
  &.field--name-field-project-images {
    // Don't use the topmost shadow, as that would show on top of the node
    // title. See _node_project.scss for the topmost shadow.
    @include media-field($use-top-shadow: false);
  }

  img, picture {
    // This is in case a transparent image is used, which normally assumes a
    // light background colour.
    @include set-colours(
      $background:  white
    );
  }

  @include media-field-caption;
}

// Project image field styles. Note the extra '.field' for specificity.
.field--name-field-project-images.field:not(.form-wrapper) {
  margin-top: 0;
  padding:    ($media-field-spacing / 2) 0;

  @include contain-floats;

  // Remove field item spacing, since we use a different method below.
  *:not(.visually-hidden):not(.hidden) + .field__item {
    margin-top: 0;
  }

  .field__item {
    float:  left;

    width: 50%;
    width: calc(50% - (#{$media-field-spacing / 2}));

    &:nth-child(odd) {
      // Use calc() to ensure we only apply the margin if calc() is
      // supported, using the second width above. We also multiply it by 0.99 to
      // fix a rounding error observed in Firefox Developer Edition 68.0b5
      // (64-bit) as of 2019-05-31.
      margin-right: calc(#{$media-field-spacing} * 0.99);

      // If this odd item is the last child, make it span the whole row.
      &:last-child {
        float:        none;
        width:        100%;
        margin-right: auto;
      }
    }

    padding:  ($media-field-spacing / 2) 0;
  }
}

// Video fields.
.field--type-video-embed-field:not(.form-wrapper) {
  @include media-field;
}
