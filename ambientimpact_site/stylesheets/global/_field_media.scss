// -----------------------------------------------------------------------------
//   Media field partial
// -----------------------------------------------------------------------------

///
/// Media field background colour.
///
$media-field-background-colour: black !default;

///
/// Media field spacing.
///
/// This is used as the overall field padding and spacing between field items.
/// Defaults to $layout-gutter to look consistent with the page layout spacing.
///
$media-field-spacing: $layout-gutter !default;

///
/// Common style for media fields.
///
/// @param {Bool} $use-top-shadow
///   Whether to include the top shadow when using mixin
///   horizontal-bleed-background.
///
@mixin media-field($use-top-shadow: true) {
  $local-stacking-order:  background, content;
  $shadow-settings:       true;

  @if $use-top-shadow == false {
    $shadow-settings: (false, true, true);
  }

  margin:   $general-spacing      0;
  padding:  $media-field-spacing  0;

  @include set-colours(
    $background:  $media-field-background-colour
  );

  @include horizontal-bleed-background(
    $colour:  $media-field-background-colour,
    $z-index: index($local-stacking-order, background),
    $shadow:  $shadow-settings
  );

  :link, :visited {
    @include link-colours($media-field-background-colour);
  }

  // Remove fancy link underlines on links not inside a <figcaption>.
  @if $use-fancy-link-underlines == true {
    .field__item > :link,
    figure > :link,
    figure > :not(figcaption) :link {
      @include remove-fancy-link-underlines;
    }
  }

  img {
    // Ensure images are always the full width of the field item.
    width:  100%;
  }

  .field__item {
    position: relative;

    z-index: index($local-stacking-order, content);
  }

  // Spacing between field items and any preceding element (usually another
  // field item).
  @include vertical-spacing-against-previous(
    '.field__item',
    $spacing-small: $media-field-spacing,
    $spacing-large: $media-field-spacing
  );

  // These are centred using horizontal margins.
  .field__item, .intrinsic-ratio, :link {
    margin-left:  auto;
    margin-right: auto;
  }

  // Links and images need to be displayed as block to avoid weird inline space
  // appearing.
  :link, img {
    display: block;
  }

  img, picture {
    // This is in case a transparent image is used, which normally assumes a
    // light background colour.
    @include set-colours(
      $background:  white
    );
  }

}

///
/// Common style for media field captions.
///
@mixin media-field-caption {
  figure {
    // Remove the margins added by normalize.css.
    margin: 0;
  }

  figcaption {
    margin-top:     $media-field-spacing;

    // This is in case we're in a multiple item field, to distinguish this
    // caption from any <figure> that may follow it.
    margin-bottom:  $media-field-spacing * 2;

    text-align: center;

    :first-child {
      margin-top: 0;
    }
    :last-child {
      margin-bottom: 0;
    }

    // Reset the display: block; set in mixin media-field back to the default of
    // inline to links in the caption.
    :link {
      display: inline;
    }
  }

  // Remove the bottom margin on the last item's caption. Note the direct child
  // selectors so that we only consider the containing entity reference field's
  // items; without the selector, this would apply to every media entity,
  // because they all technically have a last .field__item as they contain their
  // own fields.
  > .field__item,
  > .field__items > .field__item {
    &:last-child figcaption {
      margin-bottom: 0;
    }
  }
}

// Image fields. The selector targets image fields that are not on a media
// entity inside of an entity reference field. This ensures that fields
// containing multiple media entities have one full bleed background, rather
// than one for each media entity.
*:not(.field--type-entity-reference) > * > *:not(.media) > .field--type-image:not(.form-wrapper) {
  // Anything that isn't the project images field.
  &:not(.field--name-field-project-images) {
    @include media-field;
  }
  // Project images field.
  &.field--name-field-project-images {
    // Don't use the topmost shadow, as that would show on top of the node
    // title. See _node_project.scss for the topmost shadow.
    @include media-field($use-top-shadow: false);

    margin-top: 0;
    padding:    ($media-field-spacing / 2) 0;

    @include contain-floats;

    // Remove field item spacing, since we use a different method below.
    @include vertical-spacing-against-previous(
      '.field__item',
      $spacing-small: 0,
      $spacing-large: 0
    );

    .field__item {
      float:  left;

      width: 50%;
      width: calc(50% - (#{$media-field-spacing / 2}));

      &:nth-child(odd) {
        // Use calc() to ensure we only apply the margin if calc() is
        // supported, using the second width above. We also multiply it by 0.99 to
        // fix a rounding error observed in Firefox Developer Edition 68.0b5
        // (64-bit) as of 2019-05-31.
        margin-right: calc(#{$media-field-spacing} * 0.99);

        // If this odd item is the last child, make it span the whole row.
        &:last-child {
          float:        none;
          width:        100%;
          margin-right: auto;
        }
      }

      padding:  ($media-field-spacing / 2) 0;
    }
  }

  @include media-field-caption;
}

// Stand-alone media entity image fields.
*:not(.field--type-entity-reference) > * > .media > .field--type-image:not(.form-wrapper) {
  @include media-field;
  @include media-field-caption;
}

// Entity reference fields that contain media entities.
.field--name-field-animated-gifs,
.field--name-field-images {
  @include media-field;
  @include media-field-caption;
}

// Video fields.
.field--type-video-embed-field:not(.form-wrapper) {
  @include media-field;
}
