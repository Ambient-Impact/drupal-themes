// -----------------------------------------------------------------------------
//   Reveal animations for the front page
// -----------------------------------------------------------------------------

// This builds upon the reveal animations in _reveal.scss to animate all the
// page elements in on the front page in a longer, staggered sequence; this
// makes the front page stand out from other pages and provide a flashy intro
// for anyone visiting the site for the first time. Steps:
//
// 1. The primary menu bar is the only visible element, at twice its normal
//    height, placed roughly in the middle of the page, and without any children
//    visible.
//
// 2. The primary menu bar transitions to its normal location and scales to its
//    normal size.
//
// 3. The site name fades in and then plays its pop-up animation as it does on
//    other pages, albeit delayed until this point.
//
// 4. The primary menu contents fade in and move horizontally into their normal
//    positions.
//
// 5. Regions other than the primary menu and header now fade in.
//
// Additional notes:
//
// - Note the use of animation-fill-mode: backwards; which causes the start
//   state to be applied to elements before the animation has actually started,
//   i.e. for delayed animations.
//
// - All the animations start out with visibility: hidden; on the first frame
//   and then set visibility: visible; on the subsequent frame. This is done so
//   that the element cannot be interacted with, either with pointers, keyboard,
//   or other means. This primarly avoids the issue of clicks registering on
//   invisible elements.

///
/// Primary menu transform when starting animation.
///
/// Note that we're using scaleY() rather than scale() as the latter produces
/// issues in Edge where the transform-origin seems to be completely off.
///
$front-page-region-primary-menu-start-transform: scaleY(2) translateY(15vh);

///
/// Primary menu reveal animation duration.
///
$front-page-region-primary-menu-reveal-animation-duration: 2s;

///
/// Primary menu reveal animation delay.
///
/// This should be just long enough that most browsers will have already done
/// most of their layout rendering and most DOMContentLoaded JavaScript has
/// (hopefully) finished executing so the reveal animation has a better chance
/// of playing smoothly and without too many frames dropped.
///
$front-page-region-primary-menu-reveal-animation-delay: 0.5s;

///
/// <body> scroll prevention keyframes.
///
/// This is applied before and until all other animations have completed
/// running to temporarily disable scrolling, which can mess up the animation.
///
@keyframes front-page-body-scroll-prevention {
  0% {
    height:     100vh;
    overflow:   hidden;
    box-sizing: border-box;
  }
  100% {
    height:     auto;
    overflow:   visible;
  }
}

///
/// Primary menu reveal animation keyframes.
///
@keyframes front-page-primary-menu-reveal {
  0% {
    visibility: hidden;
    opacity:    0;
    transform:  $front-page-region-primary-menu-start-transform;
  }
  1% {
    visibility: visible;
  }
  50% {
    transform:  $front-page-region-primary-menu-start-transform;
  }
  60% {
    opacity:    1;
  }
  100% {
    transform:  scaleY(1) translateY(0);
  }
}

///
/// Front page content hidden keyframes.
///
/// This keeps content inaccessible to keyboard focus until it's actually
/// started fading into view.
///
@keyframes front-page-content-hidden {
  0% {
    visibility: hidden;
  }
  100% {
    visibility: hidden;
  }
}

// Only apply the front page animations if the user doesn't indicate they prefer
// reduced motion. Undoing all these and reverting to the reveal animations for
// all pages if (prefers-reduced-motion: reduce) matches is a huge pain, so
// rather just wrap this whole thing in (prefers-reduced-motion: no-preference);
// most modern browsers support it, and older ones may not be as optimized for
// animation, if they support it at all, so it's probably not much of a loss.
//
// @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
@media (prefers-reduced-motion: no-preference) {
  .path-frontpage {
    // Apply the scroll prevention animation with a delay equal to the durations
    // of all other animations. This works fine in Firefox (both Windows and
    // Android) and Chrome (Windows), but Edge and Chrome on Android refuse to
    // apply this for some reason.
    animation-name:       front-page-body-scroll-prevention;
    animation-duration:   0.1s;
    animation-delay:
      $reveal-overlay-animation-duration +
      $site-reveal-overlay-animation-delay +
      $front-page-region-primary-menu-reveal-animation-delay +
      $front-page-region-primary-menu-reveal-animation-duration +
      $region-primary-menu-block-menu-reveal-duration +
      $site-name-reveal-animation-duration +
      $content-reveal-duration;
    animation-fill-mode:  backwards;

    // Site header element contains the top shadow for the primary menu bar, so
    // they need to be animated together.
    header[role='banner'],
    .region-primary-menu {
      animation-name:             front-page-primary-menu-reveal;
      animation-duration:
        $front-page-region-primary-menu-reveal-animation-duration;
      animation-timing-function:  $easing-standard;
      animation-fill-mode:        backwards;
      animation-delay:
        $front-page-region-primary-menu-reveal-animation-delay;
    }

    // This ensures the scale transform keeps the top shadow with the top of the
    // primary menu bar below it.
    header[role='banner'] {
      transform-origin: center bottom;
    }

    // Delay the site name reveal animation until the primary menu reveal has
    // completed.
    .site-name {
      animation-delay:
        $front-page-region-primary-menu-reveal-animation-delay +
        $front-page-region-primary-menu-reveal-animation-duration;
    }

    .region-primary-menu {
      // This ensures the scale transform keeps the top edge in the right
      // location with the top shadow. Note the 1px offset - this helps prevent
      // a slight space between the top of the menu bar and the top shadow,
      // which is placed in the site header.
      transform-origin: center calc(0% + 1px);

      .block,
      .block > .menu {
        animation-delay:
          $front-page-region-primary-menu-reveal-animation-delay +
          $front-page-region-primary-menu-reveal-animation-duration +
          $site-name-reveal-animation-duration;
      }
    }

    // All other regions are considered content and are animated in after the
    // rest of the animations have completed. Note .region-hightlighted is
    // handled as a space case, as it's used to fade in the entire site via a
    // ::before pseudo-element.
    .layout-container::before,
    .region:not(.region-header):not(.region-primary-menu):not(.region-highlighted),
    .region-highlighted > * {
      animation-delay:
        $front-page-region-primary-menu-reveal-animation-delay +
        $front-page-region-primary-menu-reveal-animation-duration +
        $region-primary-menu-block-menu-reveal-duration +
        $site-name-reveal-animation-duration;
    }
    // This fades in the site content after the header and menu bar animations
    // are complete.
    .layout-container::before {
      animation-name:  reveal-overlay;
    }
    // This prevents keyboard focus to content elements that haven't faded into
    // view yet.
    .region:not(.region-header):not(.region-primary-menu):not(.region-highlighted),
    .region-highlighted > * {
      animation-name:       front-page-content-hidden;
      animation-duration:   0.001s;
      animation-fill-mode:  backwards;
    }
  }
}
