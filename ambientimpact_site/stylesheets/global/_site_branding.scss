// -----------------------------------------------------------------------------
//   Site branding
// -----------------------------------------------------------------------------

@use '../../../ambientimpact_base/stylesheets/global/layout';
@use 'header';
@use 'material.common/material.shadow' as material-shadow;
@use 'sass:list';
@use 'sass:math';
@use 'sass/helpers/breakpoint';
@use 'sass/helpers/hide';
@use '../variables/colours';
@use '../variables/general' as *;

///
/// The site name <svg> width, in pixels.
///
/// This must be synced with the value in
/// block--system-branding-block.html.twig to work correctly.
///
$site-name-width: 1028.623;

///
/// The site name <svg> height, in pixels.
///
/// This must be synced with the value in
/// block--system-branding-block.html.twig to work correctly.
///
$site-name-height: 83.997;

.block-system-branding-block {
  // This allows us to clip the bottom of the branding block so that the site
  // name can translate as far down as we need without it peeking out from the
  // bottom of the primary menu bar. The padding and negative margins are so
  // that the lateral and top drop shadows on the site name are not clipped.
  @supports (animation-fill-mode: backwards) {
    margin-top:     layout.$gutter * -1;
    margin-left:    layout.$gutter * -1;
    margin-right:   layout.$gutter * -1;
    margin-bottom:  0;

    padding-top:    layout.$gutter;
    padding-left:   layout.$gutter;
    padding-right:  layout.$gutter;
    padding-bottom: 0;

    overflow:       hidden;
  }
}

.site-name {
  $self: &;

  position: relative;

  z-index: list.index(header.$stacking-order, site-name);

  // This attempts to prevent rounding errors, i.e. showing a gap below text.
  transform: translateY(1%);

  // Since the title is an SVG, we have to use CSS filters to get a drop drop
  // shadow that matches the title lettering outlines.

  // IMPORTANT: we use a smaller depth on narrower screens because a depth that
  // looks good on wider screens is overkill when the title is smaller, making
  // the shadow look heavy handed.

  // Drop shadow, extends downwards.
  @include material-shadow.material-shadow-filter-downward(
    $depth: $fancy-heading-shadow-depth-small
  );

  &__link {
    // Drop shadow, centered to give ambient shadow effect.
    @include material-shadow.material-shadow-filter-ambient(
      $depth: $fancy-heading-shadow-depth-small
    );
  }

  @include breakpoint.on('>=fancy-heading-shadow-depth') {
    // Drop shadow, extends downwards.
    @include material-shadow.material-shadow-filter-downward(
      $depth: $fancy-heading-shadow-depth-large
    );

    &__link {
      // Drop shadow, centered to give ambient shadow effect.
      @include material-shadow.material-shadow-filter-ambient(
        $depth: $fancy-heading-shadow-depth-large
      );
    }
  }

  &__link {
    display:  block;

    // This uses the padding-bottom technique to give the link the intrinsic
    // ratio of the <svg>, while allowing it scale correctly and without any
    // extra space above it on small screens.
    #{$self}--has-svg & {
      display:  block;

      position: relative;

      height:   0;

      padding-bottom: math.div($site-name-height, $site-name-width) * 100%;

      & #{$self}__svg {
        position: absolute;

        bottom:   0;
        left:     0;

        width:    100%;
        height:   100%;
      }
      // Force this to always use $ambientimpact-orange, even on a dark colour
      // scheme where the link foreground colour may be different.
      &:not(:hover):not(:focus):not(:active) {
        color: colours.$ambientimpact-orange;
      }
    }
  }

  // Hide the actual heading text if it's been wrapped in this element. Note
  // that the text is still visible in the accessibility tree for assistive
  // software like screen readers. The <svg> title has aria-hidden="true", as
  // it exists for purely visual reasons.
  &__text {
    @include hide.me;
  }

  &__svg {
    // Override the inline display: none, which exists in case stylesheets don't
    // load for whatever reason.
    display: block !important;

    // This causes the SVG paths to use the link colours, including the
    // hover/focus colours.
    path {
      fill: currentColor;
    }
  }
}
