// -----------------------------------------------------------------------------
//   Site branding
// -----------------------------------------------------------------------------

///
/// The site name <svg> width, in pixels.
///
/// This must be synced with the value in
/// block--system-branding-block.html.twig to work correctly.
///
$site-name-width: 1028.623;

///
/// The site name <svg> height, in pixels.
///
/// This must be synced with the value in
/// block--system-branding-block.html.twig to work correctly.
///
$site-name-height: 83.997;

.site-name {
  $self: &;

  position: relative;

  z-index: index($header-stacking-order, site-name);

  margin-bottom: -1px;

  // Site name pop-up animation.
  @keyframes site-name-pop-up {
    0% {
      transform:  translateY(40%);
    }

    100% {
      transform:  none;
    }
  }
  animation-name:             site-name-pop-up;
  animation-duration:         0.3s;
  animation-timing-function:  $easing-decelerate;
  animation-fill-mode:        backwards;

  // Since the title is an SVG, we have to use CSS filters to get a drop drop
  // shadow that matches the title lettering outlines.

  // IMPORTANT: we use a smaller depth on narrower screens because a depth that
  // looks good on wider screens is overkill when the title is smaller, making
  // the shadow look heavy handed.

  // Drop shadow, extends downwards.
  @include material-shadow-filter-downward(
    $depth: $fancy-heading-shadow-depth-small
  );

  &__link {
    // Drop shadow, centered to give ambient shadow effect.
    @include material-shadow-filter-ambient(
      $depth: $fancy-heading-shadow-depth-small
    );

    // Remove fancy link underlines.
    @include remove-fancy-link-underlines;
  }

  @include media('>=fancy-heading-shadow-depth') {
    // Drop shadow, extends downwards.
    @include material-shadow-filter-downward(
      $depth: $fancy-heading-shadow-depth-large
    );

    &__link {
      // Drop shadow, centered to give ambient shadow effect.
      @include material-shadow-filter-ambient(
        $depth: $fancy-heading-shadow-depth-large
      );
    }
  }

  &__link {
    display:  block;

    // This uses the padding-bottom technique to give the link the intrinsic
    // ratio of the <svg>, while allowing it scale correctly and without any
    // extra space above it on small screens.
    // @todo Can the intrinsic ratio component handle this for us?
    #{$self}--has-svg & {
      display:  block;

      position: relative;

      height:   0;

      padding-bottom: ($site-name-height / $site-name-width) * 100%;

      & #{$self}__svg {
        position: absolute;

        bottom:   0;
        left:     0;

        width:    100%;
        height:   100%;
      }
    }
  }

  &__svg {
    display:  block;

    // This prevents the browser from showing the title attribute from the <svg>
    // or the <title> tag within the <svg> as the tooltip, and forces it to use
    // the one on the parent link instead, which is what we want for users not
    // using a screen reader (which can and will see the descriptive text).
    pointer-events: none;

    // This causes the SVG paths to use the link colours, including the
    // hover/focus colours.
    path {
      fill: currentColor;
    }
  }
}
