// -----------------------------------------------------------------------------
//   Primary site menu - sub-menus
// -----------------------------------------------------------------------------

///
/// The amount to allow for drop shadows when clipping sub-menus.
///
/// This is in px rather than ems because shadows currently use px.
///
$menu-primary-sub-menu-clip-padding: 10px;

///
/// Hide a sub-menu of the primary menu.
///
@mixin menu-primary-sub-menu-hide {
  // Until interacted with, sub-menus are absolutely positioned way off to the
  // left and are invisible and unclickable.
  left:     -9999em;
  opacity:  0;
  pointer-events: none;
}

///
/// Show a sub-menu of the primary menu.
///
@mixin menu-primary-sub-menu-show {
  @include root-conditions(('[dir=ltr]'), 'html') {
    left:   0;
  }
  @include root-conditions(('[dir=rtl]'), 'html') {
    right:  0;
  }

  opacity:  1;
  pointer-events: auto;
}

///
/// Transform a primary menu sub-menu indicator to its open state.
///
@mixin menu-primary-sub-menu-indicator-open {
  // Rotate the icon 180 degrees when the sub-menu is open, so that the icon
  // points up rather than down.
  @include on-icon-icon {
    transform: rotate(180deg);
  }
}

.region-primary-menu {
  .menu .menu {
    // Reset lateral margins that Classy sets.
    margin-left:  0;
    margin-right: 0;
  }

  .block > .menu {
    // Don't display sub-menus until overflow functionality is attached because
    // they get clipped entirely because of overflow-x: auto;
    > .menu-item > .menu {
      display: none;
    }
    &--overflow-enhanced > .menu-item > .menu {
      display: block;
    }

    > .menu-item--expanded,
    > .menu-overflow {
      position: relative;

      > .menu {
        position: absolute;

        // The clip-path causes Chrome on Windows to display a slight gap along
        // the top due to a rounding error, so this seems to fix that.
        margin-top: -1px;

        background-color: $menu-primary-background-colour;

        @include material-shadow($depth: 2);

        $clip-padding: $menu-primary-sub-menu-clip-padding;

        // This clips the top of the menu so that no shadow peeks over the top
        // onto the menu bar, allowing it to appear as if it's part of the same
        // material as the menu bar. The calc() causes the left, right, and
        // bottom edges to extend past the menu edges, so that those sides'
        // shadows are not clipped.
        clip-path: polygon(
          -$clip-padding                0,
          calc(100% + #{$clip-padding}) 0,
          calc(100% + #{$clip-padding}) calc(100% + #{$clip-padding}),
          -$clip-padding                calc(100% + #{$clip-padding})
        );
      }
    }

    > .menu-item {
      > .menu {
        @include menu-primary-sub-menu-hide;

        // Sub-menus look better if they're not narrower than the parent item.
        min-width: 100%;
      }

      // Show the sub-menu on the pointer hovering over it or its parent, when
      // the parent link is focused (e.g. by keyboard, etc.), or when anything
      // is focused inside of the sub-menu.
      &:hover > .menu,
      > :link:focus + .menu,
      &.ally-focus-within > .menu {
        @include menu-primary-sub-menu-show;
      }
      // This needs to be separate as not all browsers support it and
      // non-supporting browsers would ignore any rule it was part of.
      &:focus-within > .menu {
        @include menu-primary-sub-menu-show;
      }
    }
  }

  .menu-overflow > .menu {
    @include root-conditions(('[dir=ltr]'), 'html') {
      right: 0;
    }
    @include root-conditions(('[dir=rtl]'), 'html') {
      left:  0;
    }

    min-width: 10em;
  }
}
