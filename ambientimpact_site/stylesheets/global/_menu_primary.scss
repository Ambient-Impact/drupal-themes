// -----------------------------------------------------------------------------
//   Primary site menu
// -----------------------------------------------------------------------------

@use 'sass:list';
@use 'sass/helpers/breakpoint';
@use 'sass/patterns/horizontal_bleed_background' as horizontal-bleed-background;
@use '../variables/colours' as *;

///
/// Primary menu item font size when large font size breakpoint doesn't match.
///
$menu-primary-font-size-small:  100%;

///
/// Primary menu item font size when large font size breakpoint matches.
///
$menu-primary-font-size-large:  110%;

///
/// Primary menu background colour.
///
$menu-primary-background-colour: $ambientimpact-orange;

@include breakpoint.add-breakpoints((
  // At which height to start using $menu-primary-font-size-large.
  'menu-primary-font-size-large': breakpoint.get-breakpoint-value(
    'height-small'
  )
));

.region-primary-menu {
  ///
  /// The local stacking order of elements; later in the list is higher.
  ///
  $local-stacking-order: background, content;

  margin-top:     0;
  margin-bottom:  3em;

  @include horizontal-bleed-background.horizontal-bleed-background(
    $colour:  $menu-primary-background-colour,
    $z-index: list.index($local-stacking-order, background),
    // Don't use the topmost shadow, as that would show on top of the site
    // title. See _header.scss for the topmost shadow.
    $shadow:  (false, true, true)
  );

  &.headroom {
    // Make sure we're sticky if Headroom is active, as the horizontal-
    // bleed-background overrides it.
    position: sticky;
  }

  .block > .menu {
    position:   relative;

    display:    flex;

    // Override base, as this cuts off the right side of the menu. D:
    max-width:  none;

    margin-top:     0;
    margin-bottom:  0;

    // See _menu_primary_item.scss for margin-left and margin-right.

    z-index:    list.index($local-stacking-order, content);

    // This allows the menu items to scroll horizontally when the menu has not
    // been enhanced with the overflow functionality or that fails to correctly
    // execute for any reason.
    overflow-x: auto;

    // When overflow is available, switch to visible so that the vertical
    // overflow is shown, which is not the case when the horizontal is clipped
    // because reasons.
    &--overflow-enhanced {
      overflow-x: visible;
    }

    // Space items evenly.
    // IMPORTANT: space-around causes some odd overflow hiding.
    justify-content: space-between;

    // When all items are in the overflow menu, centre-align the overflow
    // toggle, which is the only item visible in that case.
    &--all-overflow {
      justify-content: center;
    }

    // This is the menu overflow measure shadow, which is used to determine what
    // menu items to show or hide without having to alter the visible menu
    // unless/until necessary. This prevents visible jank and other undesirable
    // side effects. Note that the JavaScript takes care of disabling focus/
    // keyboard interaction and hiding this from the accessibility tree.
    &--overflow-measure-shadow {

      position: absolute;

      left:   0;
      right:  0;

      // Required so that menu items don't force the viewport to scroll.
      overflow: hidden;

      opacity: 0;

      pointer-events: none;

    }

    font-size: $menu-primary-font-size-small;

    @include breakpoint.on('>=menu-primary-font-size-large') {
      font-size: $menu-primary-font-size-large;
    }
  }
}

.region-primary-menu-overlay {
  // Remove the max-width set in
  // ambientimpact_base/stylesheets/global/_layout.scss so that this correctly
  // covers the whole page width.
  max-width: none;
}
