// -----------------------------------------------------------------------------
//   Primary site menu
// -----------------------------------------------------------------------------

///
/// Primary menu item font size when large font size breakpoint doesn't match.
///
$menu-primary-font-size-small:  100%;

///
/// Primary menu item font size when large font size breakpoint matches.
///
$menu-primary-font-size-large:  110%;

///
/// Primary menu background colour.
///
$menu-primary-background-colour: $ambientimpact-orange;

@include add-breakpoints((
  // At which height to start using $menu-primary-font-size-large.
  'menu-primary-font-size-large': get-breakpoint-value('height-small')
));

.region-primary-menu {
  ///
  /// The local stacking order of elements; later in the list is higher.
  ///
  $local-stacking-order: background, content;

  margin-top:     0;
  margin-bottom:  3em;

  @include horizontal-bleed-background(
    $colour:  $menu-primary-background-colour,
    $z-index: index($local-stacking-order, background),
    // Don't use the topmost shadow, as that would show on top of the site
    // title. See _header.scss for the topmost shadow.
    $shadow:  (false, true, true)
  );

  &.headroom {
    // Make sure we're sticky if Headroom is active, as the horizontal-
    // bleed-background overrides it.
    position: sticky;
  }

  // Brief opacity transition for all siblings following this region.
  ~ * {
    transition-duration:        0.2s;
    transition-property:        opacity, filter;
    transition-timing-function: linear;
  }

  // This makes all siblings that follow the primary menu region - i.e. regions,
  // main content, and footer - somewhat transparent and ignore any pointer
  // events while a drop-down menu is open in the primary menu region.
  //
  // @todo Find a way to target only high performance devices so that we can
  // use grayscale() and blur() without punishing low performance devices, e.g.
  // most mobile and lower end laptops.
  &--has-menu-open ~ * {
    opacity:        0.6;
    // filter:         grayscale(40%) blur(4px);
    pointer-events: none;
  }

  .block > .menu {
    position:   relative;

    display:    flex;

    // Override base, as this cuts off the right side of the menu. D:
    max-width:  none;

    margin-top:     0;
    margin-bottom:  0;

    // See _menu_primary_item.scss for margin-left and margin-right.

    z-index:    index($local-stacking-order, content);

    // This allows the menu items to scroll horizontally when the menu has not
    // been enhanced with the overflow functionality or that fails to correctly
    // execute for any reason.
    overflow-x: auto;

    // When overflow is available, switch to visible so that the vertical
    // overflow is shown, which is not the case when the horizontal is clipped
    // because reasons.
    &--overflow-enhanced {
      overflow-x: visible;
    }

    // Space items evenly.
    // IMPORTANT: space-around causes some odd overflow hiding.
    justify-content: space-between;

    // When all items are in the overflow menu, centre-align the overflow
    // toggle, which is the only item visible in that case.
    &--all-overflow {
      justify-content: center;
    }

    font-size: $menu-primary-font-size-small;

    @include media('>=menu-primary-font-size-large') {
      font-size: $menu-primary-font-size-large;
    }
  }
}
