// -----------------------------------------------------------------------------
//   Primary site menu
// -----------------------------------------------------------------------------

///
/// Primary menu item font size when large font size breakpoint doesn't match.
///
$menu-primary-font-size-small:  100%;

///
/// Primary menu item font size when large font size breakpoint matches.
///
$menu-primary-font-size-large:  110%;

///
/// Primary menu background colour.
///
$menu-primary-background-colour: $ambientimpact-orange;

///
/// Primary menu item foreground colour.
///
$menu-primary-item-foreground-colour: get-contrasting-colour(
    $background:          $menu-primary-background-colour,
    $foreground-on-light: $foreground-colour-on-light,
    $foreground-on-dark:  $foreground-colour-on-dark
  );

///
/// Primary menu item horizontal padding.
///
$menu-primary-item-padding-x:   $layout-gutter;

///
/// Primary menu item vertical padding.
///
$menu-primary-item-padding-y:   $layout-gutter * 0.8;

///
/// Primary menu item underline height, used to indicate active menu item.
///
$menu-primary-item-underline-height:  4px;

@include add-breakpoints((
  // At which height to start using $menu-primary-font-size-large.
  'menu-primary-font-size-large': get-breakpoint-value('height-small')
));

///
/// Set primary menu item colours.
///
@mixin menu-primary-item-colours {
  @include link-colours(
    $background:      $menu-primary-background-colour,
    $normal-on-dark:  $menu-primary-item-foreground-colour,
    $hover-on-dark:   $menu-primary-item-foreground-colour
  );
}

///
/// Set primary menu item indicator transition properties.
///
@mixin menu-primary-item-indicator-transition {
  transition-duration: 0.1s;

  transition-property: transform;
}

///
/// Set primary menu item indicator as active, i.e. current/hovered/focussed.
///
@mixin menu-primary-item-indicator-active {
  transform: translateY(0);

  // This is necessary to override the default instant transition in on links,
  // so we transition in and out at the same rate, which looks better for this.
  @include menu-primary-item-indicator-transition;
}

///
/// Set primary menu item indicator as inactive.
///
@mixin menu-primary-item-indicator-inactive {
  transform:    translateY(100%);
}

///
/// Set primary menu item indicator state when menu is :hover or :focus-within.
///
@mixin menu-primary-item-active-path-indicator-hover-focus-within {
  @include menu-item-is-active-path {
    &::after {
      @include menu-primary-item-indicator-inactive;
    }

    @include link-hover {
      &::after {
        @include menu-primary-item-indicator-active;
      }
    }
  }
}

.region-primary-menu {
  ///
  /// The local stacking order of elements; later in the list is higher.
  ///
  $local-stacking-order: background, content;

  margin-top:     0;
  margin-bottom:  3em;

  @include horizontal-bleed-background(
    $colour:  $menu-primary-background-colour,
    $z-index: index($local-stacking-order, background),
    // Don't use the topmost shadow, as that would show on top of the site
    // title. See _header.scss for the topmost shadow.
    $shadow:  (false, true, true)
  );

  &.headroom {
    // Make sure we're sticky if Headroom is active, as the horizontal-
    // bleed-background overrides it.
    position: sticky;
  }

  .menu {
    position:   relative;

    display:    flex;

    // Override base, as this cuts off the right side of the menu. D:
    max-width:  none;

    margin-top:     0;
    margin-bottom:  0;

    @include root-conditions(('[dir=ltr]'), 'html') {
      margin-left:  -$menu-primary-item-padding-x;
      margin-right: -$menu-primary-item-padding-x;
    }

    // We have to specify the RTL selector so that we override Classy's menu
    // margins.
    @include root-conditions(('[dir=rtl]'), 'html') {
      margin-left:  -$menu-primary-item-padding-x;
      margin-right: -$menu-primary-item-padding-x;
    }

    z-index:    index($local-stacking-order, content);

    // This allows the nav items to scroll horizontally.
    overflow-x: auto;

    // This ensures the indicators that are translated down are hidden.
    overflow-y: hidden;

    // Space items evenly.
    // IMPORTANT: space-around causes some odd overflow hiding.
    justify-content: space-between;

    font-size: $menu-primary-font-size-small;

    @include media('>=menu-primary-font-size-large') {
      font-size: $menu-primary-font-size-large;
    }

    .menu-item {
      // Remove padding added by Classy.
      padding-top: 0;
    }

    a {
      position: relative;

      display:  block;

      padding:  $menu-primary-item-padding-y $menu-primary-item-padding-x;

      @include menu-primary-item-colours;

      @include menu-item-is-active-path {
        @include menu-primary-item-colours;
      }

      // Remove fancy link underlines.
      @include remove-fancy-link-underlines;

      // Don't wrap to new lines since the container scrolls.
      white-space: nowrap;

      // This pseudo-element is used to create the underline for current and
      // hovered/focussed menu item links.
      &::after {
        content:  '';

        position: absolute;

        left:     $menu-primary-item-padding-x;
        right:    $menu-primary-item-padding-x;
        bottom:   0;

        height:   $menu-primary-item-underline-height;

        background-color: $foreground-colour-on-dark;

        // Hidden by default by being outside of overflow.
        @include menu-primary-item-indicator-inactive;
        will-change:  transform;

        // Set the transition for the indicator when interaction has ceased. The
        // menu-primary-item-indicator-active mixin sets the transition in.
        @include menu-primary-item-indicator-transition;
      }

      // This makes the indicator visible on an item when it's being interacted
      // with.
      @include link-hover {
        &::after {
          @include menu-primary-item-indicator-active;
        }
      }

      // Active path item indicators are visible by default. This is necessary
      // in case the browser doesn't support :focus-within and our polyfill
      // doesn't get applied.
      @include menu-item-is-active-path {
        &::after {
          @include menu-primary-item-indicator-active;
        }
      }
    }

    // Hide the indicator when the menu matches :focus-within. Note that this
    // has to be a separate rule from the rest so that a browser that doesn't
    // support the selector doesn't ignore the other selectors, which it should
    // understand.
    &:focus-within a {
      @include menu-primary-item-active-path-indicator-hover-focus-within;
    }
    // Hover and polyfilled :focus-within.
    &:hover a,
    &.ally-focus-within a {
      @include menu-primary-item-active-path-indicator-hover-focus-within;
    }
  }
}
