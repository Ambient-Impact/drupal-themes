<?php

/**
 * Prepares variables for field_project_link templates.
 *
 * This sets the link text to contain the title of the parent node if the link
 * title has not been set and wraps the text in an icon.
 */
function ambientimpact_site_preprocess_field__field_project_link(
  &$variables, $hook
) {
  foreach ($variables['element']['#items'] as $key => $item) {
    // Determine if a title has been set for this link, using it if so but
    // falling back to the parent node's title.
    if ($item->title !== '') {
      $title = $item->title;
    } else {
      $title = $variables['element']['#object']->getTitle();
    }

    $text = t(
      'Visit <strong>@title</strong>',
      [
        '@title'  => $title,
      ]
    );

    $variables['items'][$key]['content']['#title'] = [
      '#type'     => 'ambientimpact_icon',
      '#icon'     => 'link',
      '#bundle'   => 'core',
      '#text'     => $text,
    ];
  }
}

/**
 * Prepares variables for field_source_link templates.
 *
 * This wraps the text in an icon.
 */
function ambientimpact_site_preprocess_field__field_source_link(
  &$variables, $hook
) {
  foreach ($variables['items'] as $key => &$item) {
    // Don't do anything to an item if the #title is not a string, which could
    // indicate modification by a module that we're not expecting.
    if (gettype($item['content']['#title']) !== 'string') {
      continue;
    }

    $item['content']['#title'] = [
      '#type'     => 'ambientimpact_icon',
      '#icon'     => 'link',
      '#bundle'   => 'core',
      '#text'     => $item['content']['#title'],
    ];
  }
}

/**
 * Prepares variables for field_web_tags templates.
 *
 * This wraps the text in an icon.
 */
function ambientimpact_site_preprocess_field__field_web_tags(
  &$variables, $hook
) {
  foreach ($variables['items'] as $key => &$item) {
    // Don't do anything to an item if the #title is not a string, which could
    // indicate modification by a module that we're not expecting.
    if (gettype($item['content']['#title']) !== 'string') {
      continue;
    }

    $item['content']['#title'] = [
      '#type'     => 'ambientimpact_icon',
      '#icon'     => 'bookmark_outline',
      '#bundle'   => 'core',
      '#text'     => $item['content']['#title'],
    ];
  }
}

/**
 * Prepares variables for 'title' field templates.
 *
 * This transliterates titles from various entities (primarily intended for
 * nodes, but others work too) to ASCII-only to avoid characters with accents,
 * as the Furore font does not support those and the browser would fall back to
 * another font, which would look out of place.
 *
 * @see https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Language%21language.api.php/group/transliteration
 *   Documentation and example of how to transliterate.
 *
 * @todo Can this be moved to a preprocess function targetted only at this
 * field? E.g. ambientimpact_site_preprocess_field__title? This variation
 * doesn't seem to register.
 */
function ambientimpact_site_preprocess_field(&$variables, $hook) {
  if ($variables['field_name'] === 'title') {
    // Get the current language code.
    $langCode = \Drupal::languageManager()->getCurrentLanguage()->getId();

    // Instantiate the transliteration class.
    $transliteration = \Drupal::transliteration();

    foreach ($variables['items'] as $key => &$item) {
      // Don't do anything to an item if the item structure is not what we're
      // expecting, as that could indicate modification by a module that we
      // don't know about.
      if (!isset($item['content']['#context']['value'])) {
        continue;
      }

      $item['content']['#context']['value'] =
        $transliteration->transliterate(
          $item['content']['#context']['value'], $langCode
        );
    }
  }
}
